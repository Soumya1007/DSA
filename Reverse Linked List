/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
     void reverse(ListNode* curr,ListNode* prev,ListNode*next)
     {
         if(!curr)
         {
             return;
         }
         next=curr->next;
         curr->next=prev;
         reverse(next,curr,curr->next);
     }
    ListNode* reverseList(ListNode* head) {
        ListNode *curr = head, *prev = NULL,*next;
         reverse(curr,prev,next);
        // while(curr)
        // {
        //     next=curr->next;
        //     curr->next=prev;
        //     prev=curr;
        //     curr=next;
        // }
        return prev;
    }
};
