/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverse(ListNode* head)
    {
         ListNode *curr = head, *prev = NULL,*next;

        while(curr)
        {
            next=curr->next;
            curr->next=prev;
            prev=curr;
            curr=next;
        }
        return prev;
    }
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
     ListNode *dummy=new ListNode();
         ListNode *first=dummy;
        int temp=0;
        while(l2 && l1)
        {
            int sum=(l1->val+l2->val)+temp;
      first->next=new ListNode(sum%10) ;
          
            if(sum>9)
           { 
                temp=sum/10;
            }
            else {
                temp=0;
            }
         first=first->next;
            l2=l2->next;
            l1=l1->next;
            
        }
        while(l1 )
        {
            int sum=l1->val+temp;
      first->next=new ListNode(sum%10) ;
          
            
                temp=sum/10;
            
         first=first->next;
            l1=l1->next; 
        }
        while(l2)
        {
             int sum=(l2->val)+temp;
          first->next=new ListNode(sum%10) ;
            temp=sum/10;
            
         first=first->next;
            l2=l2->next;
           
        }
      if(temp)
      {
           first->next=new ListNode(temp%10) ;
          
      }
        return dummy->next;
    }
};

   
